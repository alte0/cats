{"version":3,"sources":["images/logo.svg","images/cat.png","components/loading/index.js","components/main/index.js","components/form/index.js","components/list/index.js","components/list-item/index.js","helpers/words.js","components/product-card/index.js","App.js","data/index.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","className","src","logo","alt","Main","props","middle","children","defaultProps","Form","title","action","method","List","classNameList","ListItem","classNameLi","getNounPluralForm","number","one","two","many","num","parseInt","mod10","mod100","ProductCard","initialState","checked","product","disabled","classProductCard","state","onChangeInput","bind","onClickBtn","onMouseOutLabel","this","setState","isSetClass","Fragment","onChange","id","name","type","onMouseLeave","htmlFor","subtitle","portion","mouse","additionalField","CatImg","width","height","onClick","data-id","aria-label","buySelected","buyNo","Component","App","products","isLoading","document","Promise","resolve","setTimeout","json","then","data","finally","map","key","hidden","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8d16bf5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/cat.6eaa7dbe.png\";","import React from 'react';\r\nimport './loading.scss';\r\nimport logo from '../../images/logo.svg';\r\n\r\nexport const Loading = () => (\r\n  <div className=\"loading\">\r\n    <img src={logo} className=\"loading__logo\" alt=\"logo\" />\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport './main.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Main = (props) => {\r\n  const { middle } = props;\r\n  \r\n  return (\r\n    <main className={`main-content ${middle ? 'main-content_middle' : '' }`}>\r\n      {\r\n        props.children\r\n      }\r\n    </main>\r\n  )\r\n};\r\n\r\nMain.defaultProps = {\r\n  middle: false\r\n};\r\n\r\nMain.propTypes = {\r\n  middle: PropTypes.bool\r\n};","import React from 'react';\r\nimport './form.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Form = (props) => {\r\n  const { title } = props;\r\n\r\n  return (\r\n    <form action=\"/\" method=\"post\" className=\"form\">\r\n      <h1 className=\"form__title\">{title}</h1>\r\n      {\r\n        props.children\r\n      }\r\n    </form>\r\n  )\r\n};\r\n\r\nForm.defaultProps = {\r\n  title: ''\r\n};\r\n\r\nForm.propTypes = {\r\n  title: PropTypes.string\r\n};","import React from 'react';\r\nimport './list.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const List = (props) => {\r\n  const { classNameList, children } = props;\r\n\r\n  return (\r\n    <ul className={classNameList}>\r\n      { children }\r\n    </ul>\r\n  )\r\n};\r\n\r\nList.propTypes = {\r\n  classNameList: PropTypes.string,\r\n  children: PropTypes.array.isRequired\r\n};","import React from 'react';\r\nimport './list-item.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ListItem = (props) => {\r\n  const { classNameLi, children } = props;\r\n\r\n  return (\r\n    <li className={`${classNameLi}`}>\r\n      {children}\r\n    </li>\r\n  )\r\n};\r\n\r\nListItem.propTypes = {\r\n  classNameLi: PropTypes.string,\r\n  children: PropTypes.element.isRequired\r\n};","/**\r\n * Получение корректной формы множественного числа слова\r\n * Ограничение: только для целых чисел\r\n * @param {Integer} number \r\n * @param {String} one \r\n * @param {String} two \r\n * @param {String} many \r\n * @returns {String}\r\n */\r\nexport const getNounPluralForm = (number, one, two, many) => {\r\n  const num = parseInt(number) || 1;\r\n  const mod10 = num % 10;\r\n  const mod100 = num % 100;  \r\n\r\n  switch (true) {\r\n    case (mod100 >= 11 && mod100 <= 20):\r\n      return many;\r\n\r\n    case (mod10 > 5):\r\n      return many;\r\n\r\n    case (mod10 === 1):\r\n      return one;\r\n\r\n    case (mod10 >= 2 && mod10 <= 4):\r\n      return two;\r\n\r\n    default:\r\n      return many;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './product-card.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { getNounPluralForm } from \"../../helpers\";\r\nimport CatImg from '../../images/cat.png';\r\n\r\nexport class ProductCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.initialState = {\r\n      checked: props.product.checked,\r\n      disabled: props.product.disabled,\r\n      classProductCard: props.product.checked ? 'product-card__input product-card__input_selected' : 'product-card__input'\r\n    }\r\n\r\n    this.state = this.initialState;\r\n    this.onChangeInput = this.onChangeInput.bind(this);\r\n    this.onClickBtn = this.onClickBtn.bind(this);\r\n    this.onMouseOutLabel = this.onMouseOutLabel.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState((state) => ({ isSetClass: !state.isSetClass }));\r\n  }\r\n\r\n  render(){\r\n    const { product } = this.props;\r\n    const { checked, disabled, classProductCard } = this.state;\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <input \r\n          onChange={this.onChangeInput} \r\n          id={`item-${product.id}`} name=\"product\" type=\"checkbox\" \r\n          className={classProductCard} \r\n          checked={checked} \r\n          disabled={disabled} />\r\n        <label onMouseLeave={this.onMouseOutLabel} htmlFor={`item-${product.id}`} className=\"product-card__label\">\r\n          <span className=\"product-card__upper-left-corner\"></span>\r\n          <span className=\"product-card__title-promo\">Сказочное заморское яство</span>\r\n          <span className=\"product-card__cat-not-approve\">Котэ не одобряет?</span>\r\n          <span className=\"product-card__title\">Нямушка</span>\r\n          <span className=\"product-card__subtitle\">c {product.subtitle}</span>\r\n          <span className=\"product-card__about-goods\">\r\n            <span className=\"product-card__about-goods-row\">\r\n              <b>{product.portion}</b> {getNounPluralForm(product.portion, 'порция', 'порции', 'порций')}\r\n            </span>\r\n            <span className=\"product-card__about-goods-row\">\r\n              <b>{product.mouse}</b> {getNounPluralForm(product.mouse, 'мышь', 'мыши', 'мышей')} в подарок\r\n          </span>\r\n            {product.additionalField ? <span className=\"product-card__about-goods-row\">заказчик доволен</span> : ''}\r\n          </span>\r\n          <span className=\"product-card__weight\">\r\n            <span className=\"visually-hidden\">Вес</span>\r\n            <span className=\"product-card__num\">{product.num}</span>\r\n            <span className=\"product-card__unit\">кг</span>\r\n          </span>\r\n          <img src={CatImg} width=\"316\" height=\"269\" alt=\"Фото кота\" title=\"Картинка кота\" className=\"product-card__img\" />\r\n        </label>\r\n        <p className=\"product-card__description product-card__description_default\">\r\n          Чего сидишь? Порадуй котэ,\r\n          &nbsp;\r\n        <button onClick={this.onClickBtn} type=\"button\" data-id={product.id} aria-label={`Купи Нямушка c ${product.subtitle}`} title=\"Выбрать этот товар для покупки\" className=\"product-card__btn-bye text-blue text-decor-style-dashed \">купи.</button>\r\n        </p>\r\n        <p className=\"product-card__description product-card__description_selected\">{product.buySelected}</p>\r\n        <p className=\"product-card__description product-card__description_disabled\">Печалька, с {product.buyNo} закончился.</p>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  onChangeInput() {\r\n    this.setState((state) => ({ \r\n      checked: !state.checked\r\n    }))\r\n  }\r\n\r\n  onMouseOutLabel() {\r\n    if (this.state.checked) {\r\n      this.setState({ classProductCard: 'product-card__input product-card__input_selected'});\r\n    } else {\r\n      this.setState({ classProductCard: 'product-card__input' });\r\n    }\r\n  }\r\n\r\n  onClickBtn() {\r\n    this.setState((state) => ({ \r\n      checked: true,\r\n      classProductCard: 'product-card__input product-card__input_selected'\r\n    }))\r\n  }\r\n}\r\n\r\nProductCard.propTypes = {\r\n  product: PropTypes.object.isRequired\r\n};","import React, { Component } from 'react';\nimport { Loading } from './components/loading';\nimport { Main } from './components/main';\nimport { Form } from './components/form';\nimport { List } from './components/list';\nimport { ListItem } from './components/list-item';\nimport { ProductCard } from './components/product-card';\nimport { getProducts } from './data';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.initialState = {\n      products: null,\n      isLoading: true\n    }\n\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    document.title = \"Главная - Ты сегодня покормил кота?\";\n      getProducts()\n        .then(data => {\n          this.setState({\n            products: data.products,\n            isLoading: false\n          })\n        })\n        .finally(() => {\n          this.setState({\n            isLoading: false\n          })\n        });\n  }\n\n  render() {\n    const { isLoading, products } = this.state;\n\n    if (isLoading) {\n      return <Loading />\n    }\n    \n    if (!products) {\n      return (\n        <Main middle={true}>\n          <p>Данные по продуктам не загрузились.</p>\n        </Main>\n      ) \n    }\n\n    return (\n      <Main middle={true}>\n        <Form \n          title={'Ты сегодня покормил кота?'}\n          >\n          <fieldset className=\"form__fieldset\">\n            <legend className=\"visually-hidden\">Выбрасть товар для покупки</legend>\n            <List classNameList={'form__list'}>\n              {\n                products.map((product) => {\n                  return (\n                    <ListItem key={product.id} classNameLi={'product-card'}>\n                      <ProductCard product={product} />\n                    </ListItem>\n                  )\n                })\n              }\n            </List>\n          </fieldset>\n          <button type=\"submit\" hidden></button>\n        </Form>\n      </Main>\n    )\n  }\n}\n\nexport default App;\n","import json from './products.json';\r\n\r\nexport const getProducts = () => new Promise(function(resolve) {\r\n  setTimeout(() => resolve(json), 1500);\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/focus-visible/dist/focus-visible';\nimport 'normalize.css';\nimport './scss/text.scss';\nimport './scss/polyfill-focus-visible.scss';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}